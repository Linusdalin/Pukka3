package demo;

import backoffice.errorHandling.BackOfficeException;
import backoffice.errorHandling.PukkaLogger;
import data.dataBaseLayer.DBResultSetInterface;
import dataModel.column.*;
import dataModel.condition.ConditionInterface;
import dataModel.databaseLayer.DBKeyInterface;
import dataModel.table.DataObjectInterface;
import dataModel.table.DataTable;
import dataModel.table.DataTableInterface;

import java.util.List;


/********************************************************
 *
 *    ContractAnnotation - Data Table
 *    Automatically generated file by GenerateTable.java
 *
 *
 */

public class DemoItem2Table extends DataTable implements DataTableInterface {

    private static final String _TITLE = "Demo Table2";
    public static final String _TABLE = "demo2";
    private static final String _DESCRIPTION = "Another a test";

    public enum Columns {Name, Ordinal }

    public static final ColumnStructureInterface[] _STRUCTURE = new ColumnStructureInterface[] {

            new StringColumn("Name",        DisplayFormat.REGULAR),
            new IntColumn("Ordinal",        DisplayFormat.REGULAR),
    };

    public DemoItem2Table(){

        init(_STRUCTURE, _TABLE, _TITLE, _DESCRIPTION, _DefaultValues, _TestValues);
    }


    private static final DataObjectInterface[] _DefaultValues = {

            new DemoItem2("xxx", 4711),

    };
    private static final DataObjectInterface[] _TestValues = {


    };


    public DemoItem2Table(ConditionInterface condition){

        init(_STRUCTURE, _TABLE, _TITLE, _DESCRIPTION, _DefaultValues, _TestValues);
        load(condition);
    }

    public void load(ConditionInterface condition){

        try{

            DBResultSetInterface listValues = super.loadValues( condition );

            while(listValues.hasNext()) {
                Object[] values = listValues.getNext(_STRUCTURE);

                DemoItem2 item = new DemoItem2(values);
                _loadedValues.add(item);
            }

        }catch(BackOfficeException e){

            PukkaLogger.log(e);
        }
    }

    public DataObjectInterface getItem(ConditionInterface condition) {

        return new DemoItem2(condition);
    }




    /* Code below this point will not be replaced when regenerating the file*/

    /*__endAutoGenerated*/



}
