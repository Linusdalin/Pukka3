package demo;

import backoffice.errorHandling.BackOfficeException;
import backoffice.errorHandling.PukkaLogger;
import data.dataBaseLayer.DBResultSetInterface;
import dataModel.column.*;
import dataModel.condition.ConditionInterface;
import dataModel.databaseLayer.AbstractKey;
import dataModel.table.DataObjectInterface;
import dataModel.table.DataTable;
import dataModel.table.DataTableInterface;


/********************************************************
 *
 *    ContractAnnotation - Data Table
 *    Automatically generated file by GenerateTable.java
 *
 *
 */

public class DemoItemTable extends DataTable implements DataTableInterface {

    private static final String _TITLE = "Demo Table";
    public static final String _TABLE = "demo";
    private static final String _DESCRIPTION = "Just a test";

    public enum Columns {Name, Fragment, Ordinal }

    public static final ColumnStructureInterface[] _STRUCTURE = new ColumnStructureInterface[] {

            new StringColumn("Name",        DisplayFormat.REGULAR),
            new ReferenceColumn("Fragment", DisplayFormat.REGULAR, new TableReference(DemoItem2Table._TABLE, DemoItem2Table.Columns.Name.name())),
            new IntColumn("Ordinal",        DisplayFormat.REGULAR),
    };

    public DemoItemTable(){

        init(_STRUCTURE, _TABLE, _TITLE, _DESCRIPTION, _DefaultValues, _TestValues);
    }

    private static final DataObjectInterface[] _DefaultValues = {

            new DemoItem("default Value", new AbstractKey("demo2"), 42),
    };


    private static final  DataObjectInterface[] _TestValues = {

            new DemoItem("test Value", new AbstractKey("demo2"), 17),

    };

    public DemoItemTable(ConditionInterface condition){

        init(_STRUCTURE, _TABLE, _TITLE, _DESCRIPTION, _DefaultValues, _TestValues);
        load(condition);
    }

    public void load(ConditionInterface condition){

        try{

            DBResultSetInterface listValues = super.loadValues( condition );

            while(listValues.hasNext()) {

                //System.out.println(" !!! Load value from table " + _TABLE);

                Object[] values = listValues.getNext(_STRUCTURE);

                DemoItem item = new DemoItem(values);
                _loadedValues.add(item);
            }

        }catch(BackOfficeException e){

            PukkaLogger.log( e );
        }
    }

    public DataObjectInterface getItem(ConditionInterface condition) {

        return new DemoItem(condition);
    }


    /* Code below this point will not be replaced when regenerating the file*/

    /*__endAutoGenerated*/



}
